---
title: "Airline Rankings by Sentiment Score"
author: "Adam El-Kadi"
format: html
---

```{python}
# This script will actually run the analysis of each airline through public sentiment
# Importing necessary libraries
import pandas as pd  
from nltk.sentiment import SentimentIntensityAnalyzer
import matplotlib.pyplot as plt
import seaborn as sns
import nltk
nltk.download('vader_lexicon')
```

```{python}
# Load data
df = pd.read_csv("~/Desktop/UDA/Project/airline_reviews.csv")
```

```{python}
# Display first few rows 
df.head()
```

```{python}
# Display last few rows
df.tail()
```

```{python}
# Initialize Sentiment Analyzer
sia = SentimentIntensityAnalyzer()

# Building function to get sentiment score
def get_sentiment(review):
    return sia.polarity_scores(review)["compound"]

# Applying sentiment analysis
df["Sentiment Score"] = df["Review"].apply(get_sentiment)

# Categorizing sentiment
df["Sentiment Category"] = df["Sentiment Score"].apply(lambda x: "Positive" if x > 0.05 else "Negative" if x < -0.05 else "Neutral")

# Grouping by airline to get average sentiment score
airline_ranking = df.groupby("Airline")["Sentiment Score"].mean().sort_values(ascending=False).reset_index()

# Printing ranking with some fun emojis
print("\n📊 Airline Ranking by Sentiment Score:\n")
print(airline_ranking)

# Visualization of Sentiment Distribution
plt.figure(figsize=(10, 6))
sns.barplot(x="Sentiment Score", y="Airline", data=airline_ranking, palette="coolwarm")
plt.title("✈️ Airline Ranking by Sentiment Score")
plt.xlabel("Average Sentiment Score")
plt.ylabel("Airline")
plt.xlim(-1, 1) 
plt.show()

```


```{python}
from wordcloud import WordCloud

# Separate positive and negative reviews
positive_reviews = " ".join(df[df["Sentiment Score"] > 0]["Review"])
negative_reviews = " ".join(df[df["Sentiment Score"] < 0]["Review"])

# Generate word clouds
wordcloud_positive = WordCloud(width=800, height=400, background_color="white").generate(positive_reviews)
wordcloud_negative = WordCloud(width=800, height=400, background_color="black", colormap="Reds").generate(negative_reviews)

# Fun graphic to display word clouds side by side (with more emojis of course)
fig, ax = plt.subplots(1, 2, figsize=(16, 6))
ax[0].imshow(wordcloud_positive, interpolation="bilinear")
ax[0].set_title("😊 Positive Review Words")
ax[0].axis("off")

ax[1].imshow(wordcloud_negative, interpolation="bilinear")
ax[1].set_title("😡 Negative Review Words")
ax[1].axis("off")

plt.show()

```